package com.hxkj.admin.service.impl;

import com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;
import com.baomidou.mybatisplus.core.metadata.IPage;
import com.baomidou.mybatisplus.core.toolkit.Assert;
import com.baomidou.mybatisplus.extension.plugins.pagination.Page;
import com.github.yulichang.query.MPJQueryWrapper;
import com.hxkj.admin.LikeAdminThreadLocal;
import com.hxkj.admin.config.AdminConfig;
import com.hxkj.admin.service.ISystemAdminService;
import com.hxkj.admin.service.ISystemRoleMenuService;
import com.hxkj.admin.service.ISystemRoleService;
import com.hxkj.admin.validate.PageParam;
import com.hxkj.admin.validate.system.SystemAdminParam;
import com.hxkj.admin.vo.system.SystemAdminVo;
import com.hxkj.admin.vo.system.SystemRoleVo;
import com.hxkj.admin.vo.system.SystemSelfVo;
import com.hxkj.common.core.PageResult;
import com.hxkj.common.entity.system.SystemAdmin;
import com.hxkj.common.mapper.system.SystemAdminMapper;
import com.hxkj.common.mapper.system.SystemMenuMapper;
import com.hxkj.common.utils.*;
import org.springframework.beans.BeanUtils;
import org.springframework.stereotype.Service;

import javax.annotation.Resource;
import java.util.*;

/**
 * ${functionName}实现类
 */
@Service
public class ${EntityName}ServiceImpl implements I${EntityName}Service {

    @Resource
    ${EntityName}Mapper ${entityName}Mapper;

    /**
     * ${functionName}列表
     *
     * @author ${authorName}
     * @param pageParam 分页参数
     * @return PageResult<SysAdminListVo>
     */
    @Override
    public PageResult<${EntityName}Vo> list(PageParam pageParam, Map<String, String> params) {
        Integer page  = pageParam.getPageNo();
        Integer limit = pageParam.getPageSize();

        QueryWrapper<SystemAdmin> queryWrapper = new QueryWrapper<>();
        queryWrapper.eq("is_delete", 0);
        queryWrapper.orderByDesc(Arrays.asList("id", "sort"));

        #if($isSearch)
        ${entityName}Mapper.setSearch(queryWrapper, params, new String[]{
        #foreach ($column in $columns)
            #if($column.isQuery)
                #if($column.queryType=="EQ")
                    #if($column.javaType=="String")
                        #if($column.javaField.equals($column.columnName))
                        "=:${column.javaField}:str",
                        #else
                        "=:${column.javaField}@${column.columnName}:str",
                        #end
                    #elseif($column.javaType=="Integer")
                        #if($column.javaField.equals($column.columnName))
                        "=:${column.javaField}:int",
                        #else
                        "=:${column.javaField}@${column.columnName}:int",
                        #end
                    #end
                #end
            #end
        #end
        });
        #end

        IPage<SystemAdminVo> iPage = systemAdminMapper.selectPage(new Page<>(page, limit), queryWrapper);
        for (SystemAdminVo vo : iPage.getRecords()) {
            vo.setCreateTime(TimeUtil.timestampToDate(vo.getCreateTime()));
            vo.setUpdateTime(TimeUtil.timestampToDate(vo.getUpdateTime()));
            vo.setLastLoginTime(TimeUtil.timestampToDate(vo.getLastLoginTime()));
        }

        return PageResult.iPageHandle(iPage);
    }

}
