name: 编译测试
# 该脚本仅在 PR MERGE 的时候进行测试，不建议 将测试结果上传到 github
# 可以通过变量来判断，比如 PR close 的时候 发布 github release & tag

on:
  pull_request_target:
    branches:
      - master # 正式版本
    types:
      - opened
      - synchronize
      - closed
  push:
    branches:
      - master # 正式版本
  workflow_dispatch: # 手动触发

permissions: write-all

env:
  TOKEN_GITHUB: ${{ secrets.TOKEN_GITHUB }} # TODO 请在 secrets 中设置 TOKEN_GITHUB 并且 TOKEN 有权限发布 release & tag & pr & issue

jobs:
  like_admin:
    name: 编译后端
    runs-on: ubuntu-latest
    steps:
      - name: 获取代码
        uses: actions/checkout@v4

      - name: 设置 java 环境
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '8'

      - name: 编译
        run: |
          cd ./server
          mvn clean install -Dmaven.test.skip=true -f pom.xml
          find ${PWD} -name "*.jar" -exec zip -j like-admin.zip {} +

      - name: 上传
        uses: actions/upload-artifact@v4
        with:
          name: like-admin.zip
          path: server/like-admin.zip
          retention-days: 5

  uniapp:
    runs-on: ubuntu-latest
    name: 编译前端
    steps:
      - name: 获取代码
        uses: actions/checkout@v4

      - name: 设置 node 环境
        uses: actions/setup-node@v4
        with:
          node-version: '16'

      - name: 打包
        run: |
          cd ./uniapp
          npm install
          npm run build:h5
          cd ..
          zip -rj uniapp.zip ./h5

      - name: 上传
        uses: actions/upload-artifact@v4
        id: artifact-upload-step
        with:
          name: uniapp.zip
          path: uniapp.zip
          retention-days: 5

      - name: Output artifact URL
        run: echo "Artifact URL is ${{ steps.artifact-upload-step.outputs.artifact-url }}"

  Make_Release:
    # 该任务可在 merge 也就是 pr clone 的时候 进行上传任务 当然也可以合并成一个 cli
    needs: [ like_admin, uniapp ]
    if: github.event_name == 'pull_request' && github.event.pull_request.merge_commit_sha != ''
    name: 发布编译好的软件
    runs-on: ubuntu-latest
    steps:
      - name: 获取代码
        uses: actions/checkout@v4

      - name: 检测权限
        run: |
          if [ "${{ env.TOKEN_GITHUB }}" == "" ]; then
            echo "TOKEN_GITHUB=${{ github.token }}" >> $GITHUB_ENV
            echo "❌ 未设置 secrets.TOKEN_GITHUB 密码"
          fi
      - name: 查找通知
        uses: peter-evans/find-comment@v2
        id: fc
        with:
          token: ${{ env.TOKEN_GITHUB }}
          issue-number: ${{ github.event.pull_request.number }}
          comment-author: ${{ github.actor }}
          body-includes: 'This Comment was created by' # 注意该文字要存在于 更新评论 中的 body

      - name: 更新通知
        uses: peter-evans/create-or-update-comment@v3
        if: github.repository_owner	== github.actor # 只有仓库拥有者才会收到通知
        with:
          token: ${{ env.TOKEN_GITHUB }}
          comment-id: ${{ steps.fc.outputs.comment-id }}
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            @${{ github.actor }} 🌹🌹🌹

            [**Actions 运行日志**](/actions/runs/${{ github.run_id }})
            
            <sup>[**提交信息**](https://github.com/${{ github.repository }}/commits/${{ github.sha }})</sup>
            
            <br>
            
            > This Comment was created by [**Create or Update Comment**](peter-evans/create-or-update-comment@v3)


      - name: 下载
        if: github.event.pull_request.merged == true
        uses: actions/download-artifact@v4
        with:
          path: ./
          merge-multiple: true

      - name: 解压
        if: github.event.pull_request.merged == true
        run: |
          unzip like-admin.zip -d ./dist
          mv uniapp.zip ./dist

      - name: 生成版本号
        if: github.event.pull_request.merged == true # 只有被合并的 pr 才会 发布
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.1

      - name: 发布
        if: github.event.pull_request.merged == true # 只有被合并的 pr 才会 发布
        uses: softprops/action-gh-release@v1
        with:
          files: "dist/**/*.dmg"
          body: "Update ${{ steps.get-version.outputs.version }}"
          name: "Release ${{ steps.tag_version.outputs.new_tag }}"
          tag_name: ${{ steps.tag_version.outputs.new_tag }}
          draft: false
